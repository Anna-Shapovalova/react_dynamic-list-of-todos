{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","props","todos","selectedTodo","onSelect","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","onChange","clearQuery","status","value","All","Active","Completed","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","useState","user","setUser","userId","useEffect","getUser","userFromServer","href","email","name","App","setTodos","setSelectedTodo","setStatus","setQuery","handleSelect","useCallback","selectedTodoId","chosenTodo","find","handleClose","handleStatus","event","target","visibleTodos","useMemo","filter","filteredByQuery","toLowerCase","includes","handleQuery","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a135b4d9.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelect: ((selectedTodoId: number) => void)\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const {\n    todos,\n    selectedTodo,\n    onSelect,\n  } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={classNames({\n              'has-background-info-light': todo.id === selectedTodo?.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    {\n                      'fa-eye': todo !== selectedTodo,\n                      'fa-eye-slash': todo === selectedTodo,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  query: string | number;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  clearQuery: () => void\n  status: Status;\n  onSelect: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const {\n    query,\n    onChange,\n    clearQuery,\n    status,\n    onSelect,\n  } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={onSelect}\n          >\n            <option value={Status.All}>All</option>\n            <option value={Status.Active}>Active</option>\n            <option value={Status.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={onChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  onClose: () => void;\n  selectedTodo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({ onClose, selectedTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then(userFromServer => setUser(userFromServer));\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState<Status>(Status.All);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todo => setTodos(todo));\n  }, []);\n\n  const handleSelect = useCallback((selectedTodoId: number) => {\n    const chosenTodo = todos.find(todo => todo.id === selectedTodoId);\n\n    if (chosenTodo) {\n      setSelectedTodo(chosenTodo);\n    }\n  }, [selectedTodo, todos]);\n\n  const handleClose = useCallback(() => {\n    setSelectedTodo(null);\n  }, []);\n\n  const handleStatus = useCallback((event: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatus(event.target.value as Status);\n  }, []);\n\n  const getVisibleTodos = (): Todo[] => {\n    return todos.filter(todo => {\n      const filteredByQuery = todo.title.toLowerCase().includes(query.toLowerCase());\n\n      switch (status) {\n        case Status.Active:\n          return !todo.completed && filteredByQuery;\n\n        case Status.Completed:\n          return todo.completed && filteredByQuery;\n\n        case Status.All:\n        default:\n          return filteredByQuery;\n      }\n    });\n  };\n\n  const visibleTodos = useMemo(\n    getVisibleTodos,\n    [todos, status, query],\n  );\n\n  const handleQuery = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  }, []);\n\n  const clearQuery = useCallback(() => {\n    setQuery('');\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onChange={handleQuery}\n                clearQuery={clearQuery}\n                status={status}\n                onSelect={handleStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  onSelect={handleSelect}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onClose={handleClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}